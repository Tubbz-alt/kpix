 #-----------------------------------------------------------------------------
# Title         : 
# Project       : 
#-----------------------------------------------------------------------------
# File          : KpixCon.ucf
# Author        : Ben Reese, bareese@slac.stanford.edu
# Created       : 05/30/2012
#-----------------------------------------------------------------------------
# Description:
# This file contains all of the user constraints required to implement the
# KPIX FPGA
#-----------------------------------------------------------------------------
# Copyright (c) 2012 by Ben Reese. All rights reserved.
#-----------------------------------------------------------------------------
# Modification history
# 05/30/2012: created.
#-----------------------------------------------------------------------------
CONFIG PART = XC5VLX50T-FF665-1;

#inst EthFrontEnd_1/U_EthClientGtp/U_GTP LOC=GTP_DUAL_X0Y4;

# Define clocks
NET sysClk125 TNM_NET = FFS sysClk125;
NET clk200    TNM_NET = FFS clk200;
NET kpixClk   TNM_NET = FFS kpixClk;
#NET evrRefClkP   TNM_NET = evrRefClk;
NET "EvrGtp_1/evrRecClk" TNM_NET = FFS evrClk;

# Define clock frequncies
TIMESPEC TS_sysClk125 = PERIOD sysClk125 125 Mhz HIGH 50%;
TIMESPEC TS_clk200 = PERIOD clk200 200 Mhz HIGH 50%;
TIMESPEC TS_kpixClk = PERIOD kpixClk 100 Mhz HIGH 50%;
#TIMESPEC TS_evrRefClk = PERIOD evrRefClk 238 Mhz HIGH 50%;
TIMESPEC TS_evrClk = PERIOD evrClk 119 Mhz HIGH 50%;


# Group clocks
#TIMEGRP TG_sysClk125_r = RISING sysClk125;
TIMEGRP TG_kpixClk_r = RISING kpixClk;
#TIMEGRP TG_clk200_r = RISING clk200;
TIMEGRP TG_kpixClk_f = FALLING kpixClk;


# Constrain timing between clocks
# pgpClk-sysClk125
#TIMESPEC TS_pgpClk_sysClk125 = FROM TG_pgpClk_r TO TG_sysClk125_r 10 ns DATAPATHONLY;
#TIMESPEC TS_sysClk125_pgpClk = FROM TG_sysClk125_r TO TG_pgpClk_r 10 ns DATAPATHONLY;

#evrClk-clk125
TIMESPEC TS_evrClk_sysClk125 = FROM evrClk TO sysClk125 10 ns DATAPATHONLY;
TIMESPEC TS_sysClk125_evrClk = FROM sysClk125 TO evrClk 10 ns DATAPATHONLY;

#evrClk-clk200
TIMESPEC TS_evrClk_clk200 = FROM evrClk TO clk200 10 ns DATAPATHONLY;
TIMESPEC TS_clk200_evrClk = FROM clk200 TO evrClk 10 ns DATAPATHONLY;


#kpixClk-sysClk125
TIMESPEC TS_sysClk125_kpixClk = FROM sysClk125 TO kpixClk 8 ns DATAPATHONLY;
TIMESPEC TS_kpixClk_sysClk125 = FROM kpixClk TO sysClk125 10 ns DATAPATHONLY;

#clk200-sysClk
TIMESPEC TS_sysClk125_clk200 = FROM sysClk125 TO clk200 8 ns DATAPATHONLY;
TIMESPEC TS_clk200_sysClk125 = FROM clk200 TO sysClk125 5 ns DATAPATHONLY;

#kpixClk-Clk200
TIMESPEC TS_kpixClk_clk200 = FROM kpixClk TO clk200 5 ns DATAPATHONLY;
TIMESPEC TS_clk200_kpixClk = FROM clk200 TO kpixClk 5 ns DATAPATHONLY;

#Handle falling clock timing
TIMESPEC TS_kpixClk_RF = FROM TG_kpixClk_r to TG_kpixClk_f 8 ns DATAPATHONLY;
TIMESPEC TS_kpixClk_FR = FROM TG_kpixClk_f to TG_kpixClk_r 8 ns DATAPATHONLY;

# Nets to ignore for timing
NET "fpgaRst"      TIG;

# Needed to properly handle clk200->kpixClk constraints
NET "KpixDaqCore_1/KpixClockGen_1/r_clkDiv" TIG;

# Pin Assignments

# Main clock and reset
NET "fpgaRstL"           LOC = "Y18" | IOSTANDARD = "LVCMOS33" | PULLUP;
NET "gtpRefClkP"         LOC = "K4";
NET "gtpRefClkN"         LOC = "K3";

# PGP Interface
NET "udpTxP"             LOC = "H2";
NET "udpTxN"             LOC = "J2";
NET "udpRxP"             LOC = "J1";
NET "udpRxN"             LOC = "K1";

# EVR Clock and Interface
NET "evrRefClkP" LOC = "T4";
NET "evrRefClkN" LOC = "T3";
#NET "evrTxP"  LOC = "P2";
#NET "evrTxN"  LOC = "R2";
NET "evrRxP"  LOC = "R1";
NET "evrRxN"  LOC = "T1";

# Where to send debugOutA and B?
NET "debugOutA" LOC = "AD24" | IOSTANDARD = "LVCMOS33"; 
NET "debugOutB" LOC = "AE25" | IOSTANDARD = "LVCMOS33"; 

#External Trigger - NimA
NET "lemoIn" LOC = "AC22" | IOSTANDARD = "LVCMOS33"; 
NET "cmosIn" LOC = "AD26" | IOSTANDARD = "LVCMOS33"; 

# Schematic has order of connectors flipped.
# Mapping has been adjusted to compensate.

NET "kpixClkOutP<3>" LOC = "T24";
NET "kpixClkOutN<3>" LOC = "T23";
NET "kpixClkOutP<2>" LOC = "U24";
NET "kpixClkOutN<2>" LOC = "V24";
NET "kpixClkOutP<1>" LOC = "W26";
NET "kpixClkOutN<1>" LOC = "W25";
NET "kpixClkOutP<0>" LOC = "W24";
NET "kpixClkOutN<0>" LOC = "V23";

NET "kpixRstOut" LOC = "V26" | IOSTANDARD = "LVCMOS25";

NET "kpixTriggerOutP<3>" LOC = "P26";
NET "kpixTriggerOutN<3>" LOC = "R26";
NET "kpixTriggerOutP<2>" LOC = "P25";
NET "kpixTriggerOutN<2>" LOC = "R25";
NET "kpixTriggerOutP<1>" LOC = "P24";
NET "kpixTriggerOutN<1>" LOC = "P23";
NET "kpixTriggerOutP<0>" LOC = "R23";
NET "kpixTriggerOutN<0>" LOC = "R22";

NET "kpixSerTxOut<30>" LOC = "Y6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<29>" LOC = "Y5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<28>" LOC = "G6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<27>" LOC = "H6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<26>" LOC = "Y4" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<25>" LOC = "W4" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<24>" LOC = "G5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<23>" LOC = "F5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<22>" LOC = "W5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<21>" LOC = "W6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<20>" LOC = "G4" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<19>" LOC = "H4" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<18>" LOC = "V6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<17>" LOC = "V7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<16>" LOC = "J5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<15>" LOC = "J6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<14>" LOC = "U7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<13>" LOC = "T8" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<12>" LOC = "K5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<11>" LOC = "L5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<10>" LOC = "K6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<9>" LOC = "K7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<8>" LOC = "U6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<7>" LOC = "U5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<6>" LOC = "K8" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<5>" LOC = "L7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<4>" LOC = "T5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<3>" LOC = "R5" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<2>" LOC = "M7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<1>" LOC = "L8" | IOSTANDARD = "LVCMOS25";
NET "kpixSerTxOut<0>" LOC = "T25" | IOSTANDARD = "LVCMOS25";


NET "kpixSerRxIn<30>" LOC = "AA22" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<29>" LOC = "Y22" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<28>" LOC = "Y23" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<27>" LOC = "W23" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<26>" LOC = "Y26" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<25>" LOC = "Y25" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<24>" LOC = "AA25" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<23>" LOC = "AB26" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<22>" LOC = "AB25" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<21>" LOC = "AA24" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<20>" LOC = "AB24" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<19>" LOC = "AA23" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<18>" LOC = "P21" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<17>" LOC = "R21" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<16>" LOC = "T22" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<15>" LOC = "U22" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<14>" LOC = "U21" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<13>" LOC = "V22" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<12>" LOC = "V21" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<11>" LOC = "W21" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<10>" LOC = "R6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<9>" LOC = "T7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<8>" LOC = "P6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<7>" LOC = "N6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<6>" LOC = "M6" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<5>" LOC = "N7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<4>" LOC = "N8" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<3>" LOC = "P8" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<2>" LOC = "R8" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<1>" LOC = "R7" | IOSTANDARD = "LVCMOS25";
NET "kpixSerRxIn<0>" LOC = "U25" | IOSTANDARD = "LVCMOS25";



