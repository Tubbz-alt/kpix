//-----------------------------------------------------------------------------
// File          : KpixCalibRead.h
// Author        : Ryan Herbst  <rherbst@slac.stanford.edu>
// Created       : 11/30/2006
// Project       : SID Electronics API
//-----------------------------------------------------------------------------
// Description :
// This class is used to extract calibration constants from the root
// file generated by the calib_dist_plot.cc software. 
//-----------------------------------------------------------------------------
// Copyright (c) 2009 by SLAC. All rights reserved.
// Proprietary and confidential to SLAC.
//-----------------------------------------------------------------------------
// Modification history :
// 11/30/2006: created
// 10/25/2008: Added method to copy calibration data to a new root file.
// 12/12/2008: Added RMS value extraction from histogram.
// 04/29/2009: Histograms copied along with calibration data.
//             Parameter errors now read as well.
// 06/18/2009: Added namespace.
// 06/23/2009: Removed namespace.
//-----------------------------------------------------------------------------
#ifndef __KPIX_CALIB_READ_H__
#define __KPIX_CALIB_READ_H__

#include <string>
#include <TSAXParser.h>
#include "../online/KpixRunWrite.h"

// Forward Declarations
class KpixRunRead;
class KpixAsic;
class TFile;
class TGraph;
class TH1;
class TH1F;
class KpixCalibReadAsicStruct;
class KpixCalibReadGainStruct;
class KpixCalibReadDir;



// Structure for ASICs
class KpixCalibReadAsicStruct {

      public:
      //Calibration variables for 1024 channels and 4 buckets
      double fitGain [1024][4]; 
      double fitIntercept [1024][4]; 
      double fitRms [1024][4]; 
      double histSigma [1024][4]; 
      double histMean [1024][4]; 
      double histRms [1024][4]; 

      // Asic Serial #
      int kpixID;

      // Self-pointing pointer for linked list
      class KpixCalibReadAsicStruct *nextAsic;
};

// Structure for different gain modes
class KpixCalibReadGainStruct {

      public:
      // Head & Tail pointer to the Calibration Data structure
      KpixCalibReadAsicStruct *asicHead, *asicTail;

      // Asic Serial #
      int gainID;
    
      // Self-pointing pointer for linked list
      class KpixCalibReadGainStruct *nextGain;
};

// Structure for directories
class KpixCalibReadDir {
    
      public:
      // Head & Tail pointer to the Gain structure
      KpixCalibReadGainStruct *gainHead, *gainTail;

      // Directory Name
      std::string dirName;

      // Self-pointing pointer for linked list
      class KpixCalibReadDir *nextDir;
};


/** \ingroup offline */

//! Class used to parse and read calibration run data.
class KpixCalibRead : public TSAXParser{

      // Flag to delete runRead
      bool delRunRead;

      // Pointers & variables to hold the current xml tags
      KpixCalibReadAsicStruct *currAsic;
      KpixCalibReadGainStruct *currGain;
      KpixCalibReadDir *currDir;
      int currBucket, currChannel;
      char currVar[15];
      
      // Head & Tail pointer for the KpixCalibReadDir linked list
      KpixCalibReadDir *dirHead, *dirTail;

      //! Function to add an asic to linked list
      KpixCalibReadAsicStruct *addAsic ( KpixCalibReadGainStruct *currGain, int kpixID );

      //! Function to find an asic to linked list
      KpixCalibReadAsicStruct *findAsic ( KpixCalibReadGainStruct *currGain, int kpixID );

      //! Function to add a Gain to linked list
      KpixCalibReadGainStruct *addGain ( KpixCalibReadDir *currDir, int gainID );

      //! Function to find a Gain to linked list
      KpixCalibReadGainStruct *findGain ( KpixCalibReadDir *currDir, int gainID );

      //! Function to add a Dir to linked list
      KpixCalibReadDir *addDir ( std::string dirName );

      //! Function to find a Dir to linked list
      KpixCalibReadDir *findDir ( std::string dirName );

   public:

      bool xmlDataExists;

      // Run Read Class
      KpixRunRead *kpixRunRead;

      //! Calib Data Class Constructor
      /*! Pass path to calibration data or
		*/
      KpixCalibRead ( std::string calibFile, bool debug = false );

      //! Calib Data Class Constructor
      /*! Pass already open run read class
		*/
      KpixCalibRead ( KpixRunRead *kpixRunRead );

      //! Calib Data Class DeConstructor
      ~KpixCalibRead ( );

      //! Functions to parse the xml tags 
      void OnStartElement ( const char *name, const TList *attributes );
      void OnEndElement ( const char *name );
      void OnCharacters ( const char *characters );

      //! Function to invoke xml parsing
      void ParseXml ( );

      //! Function to create plot name
      static std::string genPlotName ( int gain, int kpix, int channel, int bucket, std::string prefix, int range=-1 );

      //! Function to create plot title
      static std::string genPlotTitle ( int gain, int kpix, int channel, int bucket, std::string prefix, int range=-1 );

      //! Get and make copy of Value Histogam
      TH1F *getHistValue ( std::string dir, int gain, int kpix, int channel, int bucket );

      //! Get and make copy of Time Histogam
      TH1F *getHistTime ( std::string dir, int gain, int kpix, int channel, int bucket );

      //! Get and make copy of Value Graph
      TGraph *getGraphValue ( std::string dir, int gain, int kpix, int channel, int bucket, int range=-1 );

      //! Get and make copy of Time Graph
      TGraph *getGraphTime ( std::string dir, int gain, int kpix, int channel, int bucket, int range=-1 );

      //! Get and make copy of Time Graph
      TGraph *getGraphResid ( std::string dir, int gain, int kpix, int channel, int bucket, int range=-1 );

      //! Get and make copy of Filtered Graph
      TGraph *getGraphFilt ( std::string dir, int gain, int kpix, int channel, int bucket, int range=-1 );

      //! Get Calibration Graph Fit Results If They Exist
      bool getCalibData ( double *fitGain, double *fitIntercept, 
                          std::string dir, int gain, int kpix, int channel, int bucket,
                          double *fitGainErr=NULL, double *fitInterceptErr=NULL );

      //! Get Calibration Graph Fit RMS Value
      bool getCalibRms  ( double *rms, 
                          std::string dir, int gain, int kpix, int channel, int bucket);

      //! Get Histogram Graph Fit Results If They Exist
      bool getHistData ( double *mean, double *sigma, double *rms,
                         std::string dir, int gain, int kpix, int channel, int bucket,
                         double *meanErr=NULL, double *sigmaErr=NULL);

      //! Copy calibration data to a new root file
      void copyCalibData ( TFile *newFile, std::string directory, KpixAsic **asic, int asicCnt );

      //! Copy xml string to a new root file
      void copyCalibData ( KpixRunWrite *newFile );

      ClassDef(KpixCalibRead,1)
};
#endif
