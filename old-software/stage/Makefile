#############################################################################
# Makefile for building: stage
# Generated by qmake (1.07a) (Qt 3.3.8) on: Tue Sep 14 14:23:28 2010
# Project:  stage.pro
# Template: app
# Command: $(QMAKE) -o Makefile stage.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
CXXFLAGS = -pipe -Wall -W -O2 -D_REENTRANT  -DQT_NO_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/afs/slac.stanford.edu/g/reseng/vol1/qt/qt_3.3.8_x64/mkspecs/default -I. -I$(QTDIR)/include -I.ui/ -I.moc/
LINK     = g++
LFLAGS   =  -Wl,-rpath,$(QTDIR)/lib
LIBS     = $(SUBLIBS) -L$(QTDIR)/lib -L/usr/X11R6/lib -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = $(QTDIR)/bin/moc
UIC      = $(QTDIR)/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = .obj/

####### Files

HEADERS = stage.h \
		utils.h \
		capser.h \
		serial.h \
		irrXML.h \
		laser.h \
		motion.h \
		xmlwriter.h \
		gui.h
SOURCES = utils.cc \
		capser.cc \
		serial.cc \
		irrXML.cc \
		laser.cc \
		stage.cc \
		motion.cc \
		gui.cc
OBJECTS = .obj/utils.o \
		.obj/capser.o \
		.obj/serial.o \
		.obj/irrXML.o \
		.obj/laser.o \
		.obj/stage.o \
		.obj/motion.o \
		.obj/gui.o
FORMS = 
UICDECLS = 
UICIMPLS = 
SRCMOC   = .moc/moc_gui.cpp
OBJMOC = .obj/moc_gui.o
DIST	   = stage.pro
QMAKE_TARGET = stage
DESTDIR  = 
TARGET   = stage

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(OBJCOMP) $(LIBS)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile: stage.pro  /afs/slac.stanford.edu/g/reseng/vol1/qt/qt_3.3.8_x64/mkspecs/default/qmake.conf ../../../../../g/reseng/vol1/qt/qt_3.3.8_x64/lib/libqt-mt.prl
	$(QMAKE) -o Makefile stage.pro
qmake: 
	@$(QMAKE) -o Makefile stage.pro

dist: 
	@mkdir -p .obj/stage && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) .obj/stage/ && ( cd `dirname .obj/stage` && $(TAR) stage.tar stage && $(GZIP) stage.tar ) && $(MOVE) `dirname .obj/stage`/stage.tar.gz . && $(DEL_FILE) -r .obj/stage

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:

yaccclean:
lexclean:
clean: mocclean
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile

.obj/utils.o: utils.cc utils.h \
		serial.h \
		xmlwriter.h \
		capser.h \
		laser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/utils.o utils.cc

.obj/capser.o: capser.cc 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/capser.o capser.cc

.obj/serial.o: serial.cc serial.h \
		capser.h \
		utils.h \
		laser.h \
		xmlwriter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/serial.o serial.cc

.obj/irrXML.o: irrXML.cc irrXML.h \
		irrString.h \
		irrArray.h \
		fast_atof.h \
		CXMLReaderImpl.h \
		irrTypes.h \
		heapsort.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/irrXML.o irrXML.cc

.obj/laser.o: laser.cc laser.h \
		utils.h \
		serial.h \
		xmlwriter.h \
		capser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/laser.o laser.cc

.obj/stage.o: stage.cc stage.h \
		irrXML.h \
		xmlwriter.h \
		serial.h \
		utils.h \
		motion.h \
		gui.h \
		capser.h \
		laser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/stage.o stage.cc

.obj/motion.o: motion.cc motion.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/motion.o motion.cc

.obj/gui.o: gui.cc gui.h \
		stage.h \
		serial.h \
		capser.h \
		utils.h \
		laser.h \
		xmlwriter.h \
		irrXML.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/gui.o gui.cc

.obj/moc_gui.o: .moc/moc_gui.cpp  gui.h serial.h \
		capser.h \
		utils.h \
		laser.h \
		xmlwriter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o .obj/moc_gui.o .moc/moc_gui.cpp

.moc/moc_gui.cpp: $(MOC) gui.h
	$(MOC) gui.h -o .moc/moc_gui.cpp

####### Install

install:  

uninstall:  

